apiVersion: v1
kind: ConfigMap
metadata:
  name: collectd-nginx-default
  namespace: default
data:
  nginx.conf: |+
    user www-data;
    worker_processes auto;
    pid /run/nginx.pid;
    include /etc/nginx/modules-enabled/*.conf;

    error_log /dev/null;

    events {
            worker_connections 768;
            # multi_accept on;
    }

    http {

            ##
            # Basic Settings
            ##

            proxy_buffering off;
            client_body_buffer_size 10m;
            client_max_body_size 10m;

            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;
            # server_tokens off;

            # server_names_hash_bucket_size 64;
            # server_name_in_redirect off;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            ##
            # SSL Settings
            ##

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
            ssl_prefer_server_ciphers on;

            ##
            # Logging Settings
            ##

            access_log /dev/null;
            error_log /dev/null;

            ##
            # Gzip Settings
            ##

            gzip on;

            ##
            # Virtual Host Configs
            ##

            include /etc/nginx/conf.d/*.conf;
            include /etc/nginx/sites-enabled/*;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: collect-conf
data:
  default.conf: |+
    upstream collectd {
        server localhost:9103;
    }


    server {
        listen              443 ssl http2;
        server_name         collectd-svc.default.svc.cluster.local;

        ssl_protocols           TLSv1.2;
        ssl_ciphers             ECDHE-RSA-AES256-GCM-SHA384;
        ssl_certificate         /etc/nginx/ssl/server.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;
        ssl_client_certificate  /etc/nginx/ssl/ca.crt;
        ssl_verify_client       on;

        location / {
            # Trailing slash is key!
            proxy_pass http://collectd;
        }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: collectd-certs
data:
  server.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZZekNDQTB1Z0F3SUJBZ0lVV0d1THJiMkxzeWVLa3YwWW1yVEtLQU00WVVRd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1BURUxNQWtHQTFVRUJoTUNVMGN4Q3pBSkJnTlZCQWdNQWxOSE1SUXdFZ1lEVlFRS0RBdE5lVTl5Wnl3ZwpTVzVqTGpFTE1Ba0dBMVVFQXd3Q1kyRXdIaGNOTWpBeE1ESTVNRFF3TmpFM1doY05NakV4TURJNU1EUXdOakUzCldqQmhNUXN3Q1FZRFZRUUdFd0pUUnpFTE1Ba0dBMVVFQ0F3Q1UwY3hGREFTQmdOVkJBb01DMDE1VDNKbkxDQkoKYm1NdU1TOHdMUVlEVlFRRERDWmpiMnhzWldOMFpDMXpkbU11WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYkRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBUEw0VzZET2dnaGU2REcwCm93QUgramZwNEVWSGlPUTVmWHB2eDRsbW9UTC9sa0VOYTl2TE1BUkxxQmxBYS9WbFoyR0RUSjRxSWJScUkyM3MKcjgxdnpMUThaZTNuVVpHYkhGK2t0bUF5ZGFZTHdkcnBYZ1BqOVN6SzUxcjVHeWFHWkJ3VTdwZHJGVU1hZFRXWgpUaVA2WThjYTB2cVJ2a3VhNDcxU0J6TmJxQmZmTEtERCtEQkZoMUJUMHEwQkx1RkQ2emJkcTY4bWdnRENiV1kxCmJtQUowWFRlYUg1a3VxV3ZLcW5tTnpEVldVS05saEZtajhORFFPZG56bk56SmhMUXN6VWM1WldKclpZWVA1NnIKSXFobVRMbXRXaFVaWE5HMnZGWUppVGR3K01BSkRMRG9ISVZLRWIvMndtYnpxN3NPTGVYejVyNkNYbFNVbGhnWQpyMGVWb1VLamdtUzF5RG9UOFBWcllzVkJoZTZ0SUVsRSs5bEpvRjBpMjBGNi94TWNZSHZTLzZXRGlmSkFZVW0xCmUyMlJmYWR4T25aM05aVlRUd1NFeU05VG9sblN2RGxZQUpJb1ZJcVk0UEYxbWVFb0Q2ZDJVS0Q5bjlscVNkWnYKZkVqcVZnSmNoczdZMVB5dUlkV0tLZmRKbm9IWVhDMTZPRjNJQlpOZGttT0FYZFluQWVndXJUNCtzTDBUVHlhbAp0OXNtdWd1b091TjdFZjVYaFJpUU5jVHRTdjJHR2cvcCtmNkdwWU5MNzdCQXBIRE5tRzl0K3pQcnBJSURyc1JYCjJJOVBFczVRUG5YWVBVNUE0N2U3VFE1MWNQa1NOaHBhcmplUmxUalhTQTFEOWRoNWlIcjByckg4eEY0VnpiZHAKMVQxT0Q3ekJQemM2R0lxR2UzWEM3TTFDVGpWYkFnTUJBQUdqTnpBMU1ETUdBMVVkRVFRc01DcUNLQ291WTI5cwpiR1ZqZEdRdGMzWmpMbVJsWm1GMWJIUXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dEUVlKS29aSWh2Y05BUUVNCkJRQURnZ0lCQUFFenZMeEVIanpoNFhreEI5M3ZSekQvTVA0Y2tXY3A3cHZiVE53TnRTcWc5cVE3K08wYTV0aSsKSHZVUmlOU09hWEtranZyS3VSWHFJRVk0cER4dFJJY3B2MmE5dmFxSEJsbzY3bmh6TWYxbmZLRUlqWFBQWFdFQQpvcGNwd2lzYjQ4R3Vqa3B4bWNPeXJycWF2TUNyMVVUZ2lBMC9pU0g0SUlqN3lUak13Z2l1bk94bXBxd3phem1sCkxrZGEzd0ZzdjRqay9PU1A2emJWcis2MmJ5dmUzOHFyaGlHRUxYTWhMWGhsSWtRam9CQXpZQTcyUHlGeWFDQjkKTEs1TGdsWmpTMUpsenA0VnF4dldwMnRjUCtEcmdVRkZGVEg3VXJ1Y2VkWFhiVy9MVmFlN2FXUE95R1NEUUJBRwpPZllJK2ZWcnUrTmRaNEZuQmJwUjAyRFF6d3hSdHhCRDljZzB0WTlLNklKVjdaeUFhdkJES2dseVRqOU05QTBOCjJLSmRZeDJ3Q213R3E4eUxvbUFncEMwZ2F6WFU2ZzhiZG8waXYzdVlNZ1BSYTVWOXhoUTNPUjNuWjQxQ0ljbDMKVmtKUTZxT3U5UnEwLzREV1BMQmR0VXBNWm9KdGtoczRXd0FydHlGVE40QWpWMDgvUDFPdTR3akRzTzhHMVFPUAprYTVNeU5reGs3L1hlcmtiL3F5ZG1CRG9WNGNPZUN3K3VhWnFUbzYrbW84RmNDaTZJZDI4ay9LZE5SQStpQmIrCkNjM0J4VjU0S29oVVhBaUhGU1VmVGVaTDlScjBPR3VjaGtvZXNDNEhzc0hjMEVVamxIay9KS0MvWTJKSWxPeXQKSTZqYmQzNkhkRWdxSzk2dnpKYXc2aHNWZlBnK0VNK0t4dHRpUHhBTjFoWTB3MlpGZE1TZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  server.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBOHZoYm9NNkNDRjdvTWJTakFBZjZOK25nUlVlSTVEbDllbS9IaVdhaE12K1dRUTFyCjI4c3dCRXVvR1VCcjlXVm5ZWU5NbmlvaHRHb2piZXl2elcvTXREeGw3ZWRSa1pzY1g2UzJZREoxcGd2QjJ1bGUKQStQMUxNcm5XdmtiSm9aa0hCVHVsMnNWUXhwMU5abE9JL3BqeHhyUytwRytTNXJqdlZJSE0xdW9GOThzb01QNApNRVdIVUZQU3JRRXU0VVByTnQycnJ5YUNBTUp0WmpWdVlBblJkTjVvZm1TNnBhOHFxZVkzTU5WWlFvMldFV2FQCncwTkE1MmZPYzNNbUV0Q3pOUnpsbFltdGxoZy9ucXNpcUdaTXVhMWFGUmxjMGJhOFZnbUpOM0Q0d0FrTXNPZ2MKaFVvUnYvYkNadk9ydXc0dDVmUG12b0plVkpTV0dCaXZSNVdoUXFPQ1pMWElPaFB3OVd0aXhVR0Y3cTBnU1VUNwoyVW1nWFNMYlFYci9FeHhnZTlML3BZT0o4a0JoU2JWN2JaRjlwM0U2ZG5jMWxWTlBCSVRJejFPaVdkSzhPVmdBCmtpaFVpcGpnOFhXWjRTZ1BwM1pRb1AyZjJXcEoxbTk4U09wV0FseUd6dGpVL0s0aDFZb3A5MG1lZ2RoY0xYbzQKWGNnRmsxMlNZNEJkMWljQjZDNnRQajZ3dlJOUEpxVzMyeWE2QzZnNjQzc1IvbGVGR0pBMXhPMUsvWVlhRCtuNQovb2FsZzB2dnNFQ2tjTTJZYjIzN00rdWtnZ091eEZmWWowOFN6bEErZGRnOVRrRGp0N3RORG5WdytSSTJHbHF1Ck41R1ZPTmRJRFVQMTJIbUlldlN1c2Z6RVhoWE50Mm5WUFU0UHZNRS9Oem9ZaW9aN2RjTHN6VUpPTlZzQ0F3RUEKQVFLQ0FnQVN3bUl3dEVFTjdHWDVFSDFWVDBoZWNNeEVEUlhncVIrckNGNWJtWFR3dnhNV3lyWjlMZDd6TmZRdwpudXkyOGJGZHNnbUVYTFJsZlp4bXJGT1doUDlGR3pTemZaeXFwVk0zZnp3bGlUL1VKaXc5ZnE4bmxiNGtTelk1CnErb1F1MmVYVTNab2NuZ2R5amtxZmordVAzTGN1SkY1ank4bUh6dGVMcXNucC9mK2Y5aXVRUE0wcHVtZnBoa3EKQ21GWU95bzUvanQzTm4zckdSZmhRRmJaUzJqRW9UZG9LdGJPWEF2ck9qOGdvaGhXTHlCYkQ1UWgrMXRUZ294SwpGYVhtNWY0d0o1OENRTE1LVjZ6eHp6ekp5N3c0eWMyZXUycVROb3lzQitoMFEyQ3hVd0dMMXgvOG1vOXNSdDBUCm5kU3dpSk82b1c0N1gwMXhNbGUwWEpPTDcxMlg1UXhMaFhtLzFiY2pHRE43T2tscVM1TTRIeThJaUlLZFJyTC8KcStKYkhXTVNsNXNOSzV5Z284RC9tVFIzODdhTW4rNjJDNCs1T3o0OVlpYVVPMnhqb0k0Nmh6ZEx6UEVUWnU1aApLSHBTL0gxYkJDOGhoejVoeXlHb0RJRGdTZEg0RTBxUU5LR24xWUNrODF2c0ROWi9xc2VoWEtncDA1Qm5aUGdlClFmaEEzVGdCMXdhNVRvMTlTTTVxRmFhVmE4Qis4OVhpdHI0dmVSSTBrRWpyaDlucDQrTGdmVWxSelBMZThFekcKSk8ra1ZkK1J3ZTZURjlVL2dBellmYm5CUWUrQW5ma0dSTzkxdFNrYUd5R3JrU1VIbzg2NzY0TWUvZlFRY0w2cgpFUHM1NEVBaGp5T3JDcVhVNUpQNkxpeHdpSkwzeldCZDhCUDVvS0xuUk5NVndVV0dJUUtDQVFFQS9COXFLenVECjJ3ZFMyWWxOMFBVd0tmcUdEc0xqb0s1MllJS2hjZENjWnVaV21mb1h2MmRHcnJiODFYOHZ2MEVwL1ZmVDJ1U2cKcEtZMnA1WGZ2cVFOU2U3MW1NSEE0M3h1V3czakY2aTdrZXhyaDlmQTRXTlZMVHZMVm5hMXltRHFiZCtaOUtDcwpFTHErRm1ZWTdydDN3NkhOaHNKakdXa1JORm5ETW1uMWVUZFkzeW9pYjNYUEgzTFhsNkJJalltVktZM09lb2J4CkFILzBQUng1cnZYb1phYW9Rd3RvVTNSZlFrUEpkK2JiaVliWlV0YndTcldZVHBpM20vSCtIckppdVdSYW5ma2UKanJBQ2JWdXFUUCtKZ3RPYnY2aW9xQjF2SXlJdWxRTTlBZmNPWGxJd1p4bndBem1pNCtpRDh0bm5yL3lURGNvUgpCOGhnenJQUzdSRUs3UUtDQVFFQTlyVHBERFNkSjhOWWlRUmw4a0RIS2djRWRNeE01N2tsb1ZpQlZQZmZ3TE1EClNvdDhCbXdlUzF3RDZPTGk4bjA3V3A5WkNPWjMzdzJOc1VsSFQxaWF6ZXRERVIwU045a2EweFdod0ZJY0lwRHgKeVNDT0I1bGFSV0ZDY0RKMkRKNHVJUnpQVjNaRHRLYTI2N292UStQU3hOT3FBU1ViZXVUT3lsVm03WDhyRTc0UApkZThvZm90N1MwemlMUVZuKzNIaytSR0lIcWFxTnltd1BWNjNlU1kvSVFUa0dqRTJrTnNqZVAySk03UnBlaHRSCm9PUjNISkNrT201MWJxNzNadnAvaktaOVIxVkJFWlJHekR2dUNIQXVqblNFOThHakdFTjBkdC9iM2kvSUErbVIKRFJkakhKcDNRbjhZcWdSRHVpWFRibGU0L3EwWklwZjRCMVFxNGxRUVp3S0NBUUVBbWJGUTJELzBsajIxckxTOQp3aWJsa0lHTzNVckMxbjNqM2R0a0xXeWRHMEZKQTU1b2daNmtnUGM5MDZ3djRDZ0tQODBkY2Erem1ndFUvLzRtCklpSUJrOU5lMWhzdXliNWR5NVlBbkxpWWQxRW5EKzFmUUVaOGN4R2pWL2NQeE9vbG5vc1RZQVBlUUdpR1hrTW8KNmNkUUwrcmZ6a21MZmI4RjVPTGZVa2t6Z2d4U1dlQm1rNG0rbEk0K2pNa0IwWDVRZHI5aVltRUdZMmFjN2ZBQQo0YjQ0U0ZjNjlYdnJ3Z3dMMGVwZTAzL2d6c3BzaXNwS08xRE9Jd09IMGtISHh0QzV6QWc0RVZyKzNMN0JEQWM0CkhxNGNGcXVHbzJSZVEvV0ZmV1psL1NLM093NXZMT0p2YlRwcmpKdkRCNm9EWGJTbVB5cjZQZ3F6TFFwaXNUNy8KMHRKejFRS0NBUUJTaE9haXQ0S05oMUM0MitqQnBCczZHb2pLREgvNHpqd2hBTHFaMGlOY2tFUWNqaFZaREpjQgplL0N1MkIweklPSldpSkErWXVCYmttdi9qZFExWFJ6Q25kdWNBTTVVTWVGQUU2ODc1ZnNWTU1nL0R3MlN5eCtmCnIwMkt1OFl5cUVJanYwQTNNQTZyZ1V3VUF2M0dScEQ4VnhRNU45RStSUVJLTjFDclJlc0J1b1B2WGFSODEyalIKSWhGUkg4ck5GeWFRak9XcjR2RnliQlpRSUx0YjRZZ2lJa0d0NVNJc1I3QlF5dlUyZnpUOHErQ2M0VzVaOXFPSQpDK1JwdGtwNGZuZGxjMWJhSWxFV2NUTlJJd2FXZWZlSW5MN1JKRXJLVmQzQjJWVHd0NmkrYmtTZlRXQlFjL1pLCkhyc0FPMWJ3RDdEdDZwZXRUL2JsVkZHWkdmVVNLUzRuQW9JQkFCV25qWTBxekUrZFBxYXBFUVJNc1RMazhvZXgKQjdGOTBZaFJ4ZWxwN0tzSjJHcFJpNDIwdERMQmpKVFdXYVFvNGFMWUUxamxKRDMvNS8velFtZ0I1dUdBY0RpUAo5TDdVVXJ4ZjdZZXYxNUt1MHFoT3JEOE5LeVpienE2UU9qWEZnaWFBWmRQRk5wRHBQNEFDcVV5ZFFHenQvSkZYCkNqQklpSXkxcEd3ZjNBWGRwdjZBRHBOalliL2g4TDVxWCtJVlBjdTU2VEM2MUdCVGYrbFJTMzVGYTlGNnorQkEKZlFhVDNKcXFqQzIrYnFGUzdhcnBxSVdJckJBTEZSaFd2bnVZaFMrN3FSc2hoS3hIRnd1eWxsOWhjRDZYOXpZTQp2NHNMZll3aVRsN0F4aVpMdHBOU21kV0ZWYnBsdEZ0WHlFU3JsWGNHOXlDRTdFcVdXNmNXRUZkTVFNVT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZXekNDQTBPZ0F3SUJBZ0lVVTc4ejBrTFJDYnpaV3BURkZkR3I3RmI5cS9Vd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1BURUxNQWtHQTFVRUJoTUNVMGN4Q3pBSkJnTlZCQWdNQWxOSE1SUXdFZ1lEVlFRS0RBdE5lVTl5Wnl3ZwpTVzVqTGpFTE1Ba0dBMVVFQXd3Q1kyRXdIaGNOTWpBeE1ESTRNVEl4T1RJeFdoY05NakV4TURJNE1USXhPVEl4CldqQTlNUXN3Q1FZRFZRUUdFd0pUUnpFTE1Ba0dBMVVFQ0F3Q1UwY3hGREFTQmdOVkJBb01DMDE1VDNKbkxDQkoKYm1NdU1Rc3dDUVlEVlFRRERBSmpZVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQgpBTVFZV2RUb1o4UVRpMUljWE1PUm1YcmNPdzVYY2tlV2pKS2d2anNJdWtuL3EzSU5Lb0NoMXBNRzBjZm85ZDhBCnZ0OVBqaW9waXQwUk5PeXJSUHR2QzVuemM2QW1YMThyQjY2TXRKaC9aVkhZMUwxRDhZUzhkS0FHaDYwVVBLTjIKVHNVa04wM0xwMW1CRTB5S0oyc3hycXBIUzYzci9DQVYvVDJhbkRJcndVeTFqcC9jdXpuZWpDa0ZnSUJGOXJobAp0a2g3dTd6d1g4M0xFMmhDYXIwOGRUTE13YXF4YXFJTTY2Z3VJYzJuMGlWc1pGMXdGTU8zbUFVb2U4TnpoWFJGCkxXVVUrVWJwRGpjWGowaEhVZW5yMWdHSDUxL1pzNVRJcmJackZ3cE92aEthbHI2bFQxMHcvWFZIeS80OHZ6M1oKRStvU2JMQkVCYWoyaStyZzZ1Y2UxSVhOTituaWFONFVUNUsxbGRTemtjdzBnTlpkUlFqRURZUm0wd3Jxa1d0SwpSZzhHWXpTM0ZjQmpVS1BabUJYemx3dUhSUFBYTmFBTFZRdUNPRUhOY3paZktzRFlIa21ubXg2TVRpY3Y5MCtpCkFnSFNJY0pSR3BuOFVUWVNySk8wS1dvV2RmeDArRjZtR256N1V5c3IrRVBlTGk1bVo0VWtCaVNyUFBFeS9DeDIKL25WMjRYL1QwVXR2ZjNSNzFNM3I4NlB2U3FNM2R1c2lYcVYyK0M4bVRuM29aZ2FEbUVqZ3RkcnNLM1NOaUhuSAp6MlBXL3ZPaldJUy91VVJid1B0cWRYcHA2Uyt4ZlR4TlMxVFcxRmlPcUo0OU51WHVwa295a1d4THRsZHZPUWNoCjZtejB3Y2tOQUZLNEd2Snh1bnl4SW0yZ016S0g4VEV1bnovM3ZGalZsN3hWQWdNQkFBR2pVekJSTUIwR0ExVWQKRGdRV0JCUUw3WElsNXRXVnFWcTNNM214QTJGK1piRW5MVEFmQmdOVkhTTUVHREFXZ0JRTDdYSWw1dFdWcVZxMwpNM214QTJGK1piRW5MVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCREFVQUE0SUNBUUMzCkZVa3c1bEs4ZlZ0dTFDS1FqYmU0OXVpdXoyclhUblRTSk1nVGpGdWNnd2VwLzFKYkhLV3cwd0ZHTlJlM24vQ2MKMW9VUCs1bDhEY3psOFlBeGdlZ2l0QW12WmZuNElkVk9yVzBLZDJlcUNpcDNUQnU2aFFKOTJMaXlobnkrVm1kcApWbkU4Z0Z0Wmt0Rlo1WEFpcXdKR284YkhsalRCZ2MwMDZYNG1kbGE5OWRTZmdPNE53dTF4SkJYaysxSGgreXdtCjdLZWF4RDV1SmRQeHV0WEc4YXc2MW1CMVB3ZnFQNjNwWDdKbEpEN2lFZHlqRWNYVHJsdVdaUzA5am1hMEtHNmgKQm92RmlZZ1RVS3A0T0xHZmk3UHV3M1RyenI5Ry9TN0laQkd0REs4N2NKWWJyMGVGNjA3YitiOHFZQjdjbVAvdAp4ZjU5L2lwMlp5T3BIL1ZWdlZhc0JBYUZxdUJqZlM3Wk1wdnlpcDlzcEFFNU5nYmNZbjdseE9rdFh3U1VYcDhBCkJ3QTMzY2pYWUREUHV3eXcwdlNhdjhSNWpwTVIraGRSYjlvTzZ1V1ROYkV1VHRHNXN5R04vNCszRUk1VjdYNmUKOWRVc21qOWJVUXh5R1kwM2NjbVppanVnL3ZRUWN3MEVtSVRmdFRNaDlLc1N2cUI0bkZLdnVzSFk2YldSOFd2TApPeGpuM2hFbml3ay8rZmo0OE5Hd3RocG1sMXlNcWJqNnB1OUFCUmxZU0Zsek9sOEVLQm93RVZLWVVPTUVsanJiClVuVEwwNlVubTE0Sk02M0VWV2NHTlpKTW1COW83dHJtdHlYaWdWZGFlUGk5V1E1cHBTMEo3Z0dmVG1iMzRqZEIKMTVnWU1CcHR6QlFjSVh4RGVTTm42eUQ5aUxtWHlBNmhyTEkyMU1QaFVRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: collectd
  labels:
    app: collectd
spec:
  selector:
    matchLabels:
      name: collectd
  template:
    metadata:
      labels:
        name: collectd
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy : IfNotPresent
        securityContext:
          readOnlyRootFilesystem: true
        ports:
          - name: metrics
            containerPort: 443
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: collectd-keys
        - mountPath: /var/cache/nginx
          name: varcache
        - mountPath: /var/lib/nginx
          name: varlib
        - mountPath: /run
          name: rootrun
        - mountPath: /etc/nginx/nginx.conf
          name: collectd-nginx-default
          subPath: nginx.conf
        - mountPath: /etc/nginx/conf.d/default.conf
          name: collect-conf
          subPath: default.conf
      - name: collectd
        image: gar-registry.caas.intel.com/virtiot/collectd:1.0
        securityContext:
          privileged: true
          readOnlyRootFilesystem: true
        command: [ "/opt/collectd/sbin/collectd", "-C", "/etc/edge-ai/collectd/collectd.conf", "-f"]
        volumeMounts:
        - mountPath: /data/kmb
          name: kmb-vol
        - mountPath: /etc/edge-ai/collectd
          name: collectd-vol
        - mountPath: /dev/mem
          name: kmb-mem
      volumes:
      - name: kmb-vol
        hostPath:
          path: /data/kmb
          type: Directory
      - name: collectd-vol
        hostPath:
          path: /etc/edge-ai/collectd
          type: Directory
      - name: kmb-mem
        hostPath:
          path: /dev/mem
          type: File
      - name: collectd-keys
        secret:
          secretName: collectd-certs
      - name: varcache
        emptyDir: {}
      - name: varlib
        emptyDir: {}
      - name: rootrun
        emptyDir: {}
      - name: collect-conf
        configMap:
          name: collect-conf
      - name: collectd-nginx-default
        configMap:
          name: collectd-nginx-default
---
kind: Service
apiVersion: v1
metadata:
  name: collectd-svc
  labels:
    app: collectd-svc
spec:
  selector:
    name: collectd
  ports:
    - name: metrics
      port: 443
      targetPort: metrics
